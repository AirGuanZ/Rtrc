Material "Builtin/SurfelGI"
{

    Pass
    {
        Shader "Builtin/SurfelGI/ComputeSurfelThreadGroup64Count"
        {
            #comp CSMain
            
            rtrc_group(Pass)
            {
                rtrc_define(RWStructuredBuffer<uint>, InOutCounterBuffer)
            };

            [numthreads(1, 1, 1)]
            void CSMain()
            {
                uint surfelCount = InOutCounterBuffer[PTGI_CC_ActiveSurfel];
                uint threadGroupCountX = (surfelCount + (64 - 1)) / 64;
                InOutCounterBuffer[PTGI_CC_SurfelThreadGroupX] = threadGroupCountX;
                InOutCounterBuffer[PTGI_CC_SurfelThreadGroupY] = 1;
                InOutCounterBuffer[PTGI_CC_SurfelThreadGroupZ] = 1;
            }
        }
    }

    Pass
    {
        Shader "Builtin/SurfelGI/FillPendingElementBuffer"
        {
            #comp CSMain

            #include "Common.hlsl"

            rtrc_group(Pass)
            {
                rtrc_define(StructureBuffer<SurfelData>,                     SurfelBuffer)
                rtrc_define(RWStructuredBuffer<uint>,                        CellCounterBuffer)
                rtrc_define(RWStructuredBuffer<uint>,                        CommonCounterBuffer)
                rtrc_define(RWStructuredBuffer<SurfelClipmapPendingElement>, PendingElementBuffer)
                rtrc_ref(SurfelClipmap)
            };

            [numthreads(64, 1, 1)]
            void CSMain(uint tid : SV_DispatchThreadID)
            {
                uint totalSurfelCount = CommonCounterBuffer[PTGI_CC_ActiveSurfel];
                if(tid >= totalSurfelCount)
                    return;
                
                GET_SURFEL_CLIP_PARAMS(clipmap)
                SurfelData surfel = SurfelBuffer[tid];
                float3 relativePosition = surfel.position - clipmap.centerPosition;
                int level = ComputeSurfelClipmapLevel(relativePosition, clipmap);
                if(level < 0)
                    return;
                
                int3 grid = ComputeSurfelClipmapGridCoord(relativePosition, clipmap, level);
                // TODO
            }
        }
    }

} // Material "Builtin/SurfelGI"
