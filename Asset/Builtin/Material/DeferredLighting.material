Shader "Builtin/DeferredLighting"
{

#vert VSMain
#frag FSMain

#include "Builtin/Material/Common/Scene.hlsl"

struct PerPassConstantBuffer_DeferredLighting
{
    float4                         GBufferSize;
    CameraConstantBuffer           camera;
    DirectionalLightConstantBuffer directionalLight;
};

rtrc_group(PerPassGroup_DeferredLighting)
    rtrc_define(ConstantBuffer<PerPassConstantBuffer_DeferredLighting>, CBuffer_DeferredLighting)
    rtrc_define(Texture2D<float4>, GBufferA)
    rtrc_define(Texture2D<float4>, GBufferB)
    rtrc_define(Texture2D<float4>, GBufferC)
    rtrc_define(Texture2D<float>,  GBufferDepth)
rtrc_end

struct VSInput
{
    float2 position : POSITION;
    float2 uv       : UV;
};

} // Shader "Builtin/DeferredLighting"
